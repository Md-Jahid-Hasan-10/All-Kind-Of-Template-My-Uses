//! In The Name Of Allah
#include <bits/stdc++.h>
using namespace std;

#define int long long
#define Fokinnir_moto_kaj_koris_na \
    ios_base::sync_with_stdio(0);  \
    cin.tie(0);                    \
    cout.tie(0);

const int oo = 1e18;
const int N = 2e5 + 123;
int ar[N],tree[4*N],lazy[4*N];
int combine(int x,int y){
    return min(x , y);//! change
}
void build(int node,int l,int r)
{
    lazy[node] = -1;//! change
    if(l == r){
        tree[node] = ar[l];
        return;
    }
    int mid = (l + r)/2;
    build(node*2,l,mid);
    build(node*2+1,mid+1,r);
    tree[node] = combine(tree[node*2],tree[node*2 + 1]);
}
void propagate(int node,int l,int r){
    if(lazy[node] == -1)return;//! change
    if(l != r){
        lazy[2*node] = lazy[node];//! change
        lazy[2*node+1] = lazy[node];//! change
    }
    tree[node] = lazy[node];//! change
    lazy[node] = -1;//! change
}
int query(int node,int l,int r,int a,int b){
    propagate(node,l,r);
    if(l > b || r < a){
        return  oo;//! change
    }
    if(a <= l && r <= b){
        return tree[node];
    }
    int mid = (l + r)/2;
    int x = query(node * 2,l,mid,a,b);
    int y = query(node * 2 + 1,mid + 1,r,a,b);
    return combine(x,y);
}
void update(int node,int l,int r,int a,int b,int val){
    propagate(node,l,r);
    if(a > r || b < l)return;
    if(a <= l && r <= b){
        lazy[node] = val;//! change
        propagate(node,l,r);
        return;
    }
    int mid = (l + r)/2;
    update(node*2,l,mid,a,b,val);
    update(node*2+1,mid+1,r,a,b,val);
    tree[node] = combine(tree[node*2],tree[node*2+1]);
}
void Goriber_solve()
{
    int n,q;
    cin >> n >> q;
    build(1,1,n);
    while(q--){
        int type;
        cin >> type;
        if(type == 1){
            int l,r,val;
            cin >> l >> r >> val;
            l++;
            update(1,1,n,l,r,val);
        }
        else{
            int l,r;
            cin >> l >> r;
            l++;
            cout << query(1,1,n,l,r) << endl;
        }
    }
}
signed main()
{
    Fokinnir_moto_kaj_koris_na
    int _ = 1,tc = 0;
    //cin >> _;
    while (_--)
    {
        //cout<<"Case "<<++tc<<": ";
        Goriber_solve();
    }
}
